upstream nestjs_backend {
    # NestJS 应用容器
    server app:3000;
    
    # 连接保活
    keepalive 32;
}

# HTTP 服务器（重定向到 HTTPS）
server {
    listen 80;
    listen [::]:80;
    server_name _;  # 替换为你的域名

    # Let's Encrypt ACME 验证
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 健康检查不重定向
    location /api/health {
        proxy_pass http://nestjs_backend;
        access_log off;
    }

    # 其他请求重定向到 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;  # 替换为你的域名

    # ========================================
    # SSL 证书配置
    # ========================================
    # 替换为你的证书路径
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # SSL 优化配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # ========================================
    # 安全头配置
    # ========================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ========================================
    # 日志配置
    # ========================================
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # ========================================
    # Gzip 压缩
    # ========================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # ========================================
    # 请求体大小限制
    # ========================================
    client_max_body_size 100M;

    # ========================================
    # API 代理配置
    # ========================================
    location /api {
        # 代理到 NestJS 应用
        proxy_pass http://nestjs_backend;
        
        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 请求头转发
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # ========================================
    # Swagger 文档（可选择性暴露）
    # ========================================
    location /api/docs {
        # 生产环境可以注释掉以禁用文档访问
        proxy_pass http://nestjs_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # IP 白名单（可选）
        # allow 192.168.1.0/24;
        # deny all;
    }

    # ========================================
    # 健康检查端点
    # ========================================
    location /api/health {
        proxy_pass http://nestjs_backend;
        access_log off;
        proxy_set_header Host $host;
    }

    # ========================================
    # 静态文件缓存（上传文件）
    # ========================================
    location /uploads {
        # 如果上传文件通过 Nginx 提供服务
        # alias /app/uploads;
        # expires 30d;
        # add_header Cache-Control "public, immutable";
        
        # 或者代理到应用
        proxy_pass http://nestjs_backend;
        proxy_set_header Host $host;
    }

    # ========================================
    # 根路径（可选：返回 404 或重定向）
    # ========================================
    location = / {
        return 404;
    }
}
